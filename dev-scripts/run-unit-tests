#!/bin/bash

# Runs all unit tests and performs static code analysis.
#
# Options:
#
#  --full   Include slower, more exhaustive tests and capture test coverage
#           results (outputs to .coverage.html).

# Exit build script on first failure.
set -e

# Echo commands to stdout.
set -x

full_test=""
go_test_flags=()
readonly COVERAGE_FILE_RAW=".coverage.out"
readonly COVERAGE_FILE_HTML=".coverage.html"
if [[ "$1" = "--full" ]]; then
  full_test="1"
  go_test_flags+=("-v")
  go_test_flags+=("-race")
  go_test_flags+=("--coverprofile=${COVERAGE_FILE_RAW}")
fi

# Exit on unset variable.
set -u

# Change directory to repository root.
readonly SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
cd "${SCRIPT_DIR}/.."

go test "${go_test_flags[@]}" ./...
go vet ./...

# Install staticcheck if it's not present.
STATICCHECK_PATH="$(go env GOPATH)/bin/staticcheck"
readonly STATICCHECK_PATH
readonly STATICCHECK_VERSION="2022.1.2"
if [[ ! -f "${STATICCHECK_PATH}" ]]; then
    go install "honnef.co/go/tools/cmd/staticcheck@${STATICCHECK_VERSION}"
fi
"${STATICCHECK_PATH}" ./...

if [ ! -z "$full_test" ]; then
  go tool cover -html .coverage.out -o .coverage.html
fi
